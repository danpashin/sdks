// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.12.5 clang-1500.3.9.1.1)
// swift-module-flags: -target arm64-apple-ios17.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-bare-slash-regex -user-module-version 135.4.0.6 -module-name Symbols
import Swift
@_exported import Symbols
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public protocol SymbolEffect : Swift.Hashable, Swift.Sendable {
  var configuration: Symbols.SymbolEffectConfiguration { get }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct SymbolEffectConfiguration : Swift.Hashable, Swift.Sendable {
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.SymbolEffectConfiguration, b: Symbols.SymbolEffectConfiguration) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.SymbolEffect where Self == Symbols.PulseSymbolEffect {
  @_alwaysEmitIntoClient public static var pulse: Symbols.PulseSymbolEffect {
    get {
        PulseSymbolEffect()
    }
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct PulseSymbolEffect : Symbols.SymbolEffect {
  @usableFromInline
  internal init()
  public var byLayer: Symbols.PulseSymbolEffect {
    get
  }
  public var wholeSymbol: Symbols.PulseSymbolEffect {
    get
  }
  public var configuration: Symbols.SymbolEffectConfiguration {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.PulseSymbolEffect, b: Symbols.PulseSymbolEffect) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.SymbolEffect where Self == Symbols.BounceSymbolEffect {
  @_alwaysEmitIntoClient public static var bounce: Symbols.BounceSymbolEffect {
    get {
        BounceSymbolEffect()
    }
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct BounceSymbolEffect : Symbols.SymbolEffect {
  @usableFromInline
  internal init()
  public var up: Symbols.BounceSymbolEffect {
    get
  }
  public var down: Symbols.BounceSymbolEffect {
    get
  }
  public var byLayer: Symbols.BounceSymbolEffect {
    get
  }
  public var wholeSymbol: Symbols.BounceSymbolEffect {
    get
  }
  public var configuration: Symbols.SymbolEffectConfiguration {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.BounceSymbolEffect, b: Symbols.BounceSymbolEffect) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.SymbolEffect where Self == Symbols.VariableColorSymbolEffect {
  @_alwaysEmitIntoClient public static var variableColor: Symbols.VariableColorSymbolEffect {
    get {
        VariableColorSymbolEffect()
    }
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct VariableColorSymbolEffect : Symbols.SymbolEffect {
  @usableFromInline
  internal init()
  public var reversing: Symbols.VariableColorSymbolEffect {
    get
  }
  public var nonReversing: Symbols.VariableColorSymbolEffect {
    get
  }
  public var cumulative: Symbols.VariableColorSymbolEffect {
    get
  }
  public var iterative: Symbols.VariableColorSymbolEffect {
    get
  }
  public var hideInactiveLayers: Symbols.VariableColorSymbolEffect {
    get
  }
  public var dimInactiveLayers: Symbols.VariableColorSymbolEffect {
    get
  }
  public var configuration: Symbols.SymbolEffectConfiguration {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.VariableColorSymbolEffect, b: Symbols.VariableColorSymbolEffect) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.SymbolEffect where Self == Symbols.ScaleSymbolEffect {
  @_alwaysEmitIntoClient public static var scale: Symbols.ScaleSymbolEffect {
    get {
        ScaleSymbolEffect()
    }
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct ScaleSymbolEffect : Symbols.SymbolEffect {
  @usableFromInline
  internal init()
  public var up: Symbols.ScaleSymbolEffect {
    get
  }
  public var down: Symbols.ScaleSymbolEffect {
    get
  }
  public var byLayer: Symbols.ScaleSymbolEffect {
    get
  }
  public var wholeSymbol: Symbols.ScaleSymbolEffect {
    get
  }
  public var configuration: Symbols.SymbolEffectConfiguration {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.ScaleSymbolEffect, b: Symbols.ScaleSymbolEffect) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.SymbolEffect where Self == Symbols.AppearSymbolEffect {
  @_alwaysEmitIntoClient public static var appear: Symbols.AppearSymbolEffect {
    get {
        AppearSymbolEffect()
    }
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct AppearSymbolEffect : Symbols.SymbolEffect {
  @usableFromInline
  internal init()
  public var up: Symbols.AppearSymbolEffect {
    get
  }
  public var down: Symbols.AppearSymbolEffect {
    get
  }
  public var byLayer: Symbols.AppearSymbolEffect {
    get
  }
  public var wholeSymbol: Symbols.AppearSymbolEffect {
    get
  }
  public var configuration: Symbols.SymbolEffectConfiguration {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.AppearSymbolEffect, b: Symbols.AppearSymbolEffect) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.SymbolEffect where Self == Symbols.DisappearSymbolEffect {
  @_alwaysEmitIntoClient public static var disappear: Symbols.DisappearSymbolEffect {
    get {
        DisappearSymbolEffect()
    }
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct DisappearSymbolEffect : Symbols.SymbolEffect {
  @usableFromInline
  internal init()
  public var up: Symbols.DisappearSymbolEffect {
    get
  }
  public var down: Symbols.DisappearSymbolEffect {
    get
  }
  public var byLayer: Symbols.DisappearSymbolEffect {
    get
  }
  public var wholeSymbol: Symbols.DisappearSymbolEffect {
    get
  }
  public var configuration: Symbols.SymbolEffectConfiguration {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.DisappearSymbolEffect, b: Symbols.DisappearSymbolEffect) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.SymbolEffect where Self == Symbols.ReplaceSymbolEffect {
  @_alwaysEmitIntoClient public static var replace: Symbols.ReplaceSymbolEffect {
    get {
        ReplaceSymbolEffect()
    }
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct ReplaceSymbolEffect : Symbols.SymbolEffect {
  @usableFromInline
  internal init()
  public var downUp: Symbols.ReplaceSymbolEffect {
    get
  }
  public var upUp: Symbols.ReplaceSymbolEffect {
    get
  }
  public var offUp: Symbols.ReplaceSymbolEffect {
    get
  }
  public var byLayer: Symbols.ReplaceSymbolEffect {
    get
  }
  public var wholeSymbol: Symbols.ReplaceSymbolEffect {
    get
  }
  public var configuration: Symbols.SymbolEffectConfiguration {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.ReplaceSymbolEffect, b: Symbols.ReplaceSymbolEffect) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.SymbolEffect where Self == Symbols.AutomaticSymbolEffect {
  @_alwaysEmitIntoClient public static var automatic: Symbols.AutomaticSymbolEffect {
    get {
        AutomaticSymbolEffect()
    }
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct AutomaticSymbolEffect : Symbols.SymbolEffect {
  @usableFromInline
  internal init()
  public var configuration: Symbols.SymbolEffectConfiguration {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.AutomaticSymbolEffect, b: Symbols.AutomaticSymbolEffect) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
public struct SymbolEffectOptions : Swift.Hashable, Swift.Sendable {
  public static var `default`: Symbols.SymbolEffectOptions {
    get
  }
  public static func speed(_ speed: Swift.Double) -> Symbols.SymbolEffectOptions
  public func speed(_ speed: Swift.Double) -> Symbols.SymbolEffectOptions
  public static func `repeat`(_ count: Swift.Int?) -> Symbols.SymbolEffectOptions
  public func `repeat`(_ count: Swift.Int?) -> Symbols.SymbolEffectOptions
  public static var repeating: Symbols.SymbolEffectOptions {
    get
  }
  public var repeating: Symbols.SymbolEffectOptions {
    get
  }
  public static var nonRepeating: Symbols.SymbolEffectOptions {
    get
  }
  public var nonRepeating: Symbols.SymbolEffectOptions {
    get
  }
  public func hash(into hasher: inout Swift.Hasher)
  public static func == (a: Symbols.SymbolEffectOptions, b: Symbols.SymbolEffectOptions) -> Swift.Bool
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
@_marker public protocol TransitionSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.AppearSymbolEffect : Symbols.TransitionSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.DisappearSymbolEffect : Symbols.TransitionSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.AutomaticSymbolEffect : Symbols.TransitionSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
@_marker public protocol ContentTransitionSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.ReplaceSymbolEffect : Symbols.ContentTransitionSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.AutomaticSymbolEffect : Symbols.ContentTransitionSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
@_marker public protocol IndefiniteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.PulseSymbolEffect : Symbols.IndefiniteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.VariableColorSymbolEffect : Symbols.IndefiniteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.ScaleSymbolEffect : Symbols.IndefiniteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.AppearSymbolEffect : Symbols.IndefiniteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.DisappearSymbolEffect : Symbols.IndefiniteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
@_marker public protocol DiscreteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.BounceSymbolEffect : Symbols.DiscreteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.PulseSymbolEffect : Symbols.DiscreteSymbolEffect {
}
@available(iOS 17.0, macOS 14.0, tvOS 17.0, watchOS 10.0, *)
extension Symbols.VariableColorSymbolEffect : Symbols.DiscreteSymbolEffect {
}
