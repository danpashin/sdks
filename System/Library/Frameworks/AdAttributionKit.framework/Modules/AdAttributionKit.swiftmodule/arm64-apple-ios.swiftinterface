// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.10 (swiftlang-5.10.0.12.5 clang-1500.3.9.1.1)
// swift-module-flags: -target arm64-apple-ios17.4 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -library-level api -enable-upcoming-feature ConciseMagicFile -enable-upcoming-feature ForwardTrailingClosures -enable-bare-slash-regex -user-module-version 1.1.26 -module-name AdAttributionKit
@_exported import AdAttributionKit
import Foundation
import Swift
import _Concurrency
import _StringProcessing
import _SwiftConcurrencyShims
import os.log
import os
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
public struct AppImpression : Swift.Equatable, Swift.Hashable, Swift.Identifiable, Swift.Sendable {
  public static func == (lhs: AdAttributionKit.AppImpression, rhs: AdAttributionKit.AppImpression) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var id: Foundation.UUID {
    get
  }
  public var publisherItemID: Swift.UInt64 {
    get
  }
  public var advertisedItemID: Swift.UInt64 {
    get
  }
  public var sourceID: Swift.Int {
    get
  }
  public var keyID: Swift.String {
    get
  }
  public var adNetworkID: Swift.String {
    get
  }
  public var timestamp: Foundation.Date {
    get
  }
  public var compactJWSRepresentation: Swift.String {
    get
  }
  #if compiler(>=5.3) && $AsyncAwait
  public init(compactJWS: Swift.String) async throws
  #endif
  public typealias ID = Foundation.UUID
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension AdAttributionKit.AppImpression {
  #if compiler(>=5.3) && $AsyncAwait
  public func beginView() async throws
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public func endView() async throws
  #endif
}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension AdAttributionKit.AppImpression {
  #if compiler(>=5.3) && $AsyncAwait
  public func handleTap() async throws
  #endif
}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
public enum CoarseConversionValue : Swift.String, Swift.Codable, Swift.Sendable {
  case high
  case low
  case medium
  public init?(rawValue: Swift.String)
  public typealias RawValue = Swift.String
  public var rawValue: Swift.String {
    get
  }
}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
public struct Postback {
  #if compiler(>=5.3) && $AsyncAwait
  public static func updateConversionValue(_ fineConversionValue: Swift.Int, lockPostback: Swift.Bool) async throws
  #endif
  #if compiler(>=5.3) && $AsyncAwait
  public static func updateConversionValue(_ fineConversionValue: Swift.Int, coarseConversionValue: AdAttributionKit.CoarseConversionValue, lockPostback: Swift.Bool) async throws
  #endif
}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
public enum AdAttributionKitError : Swift.Error, Swift.CustomStringConvertible, Swift.Sendable {
  case unknown
  case missingAttributionView
  case impressionExpired
  case invalidImpressionJWSHeader
  case invalidImpressionJWSPayload
  public var description: Swift.String {
    get
  }
  public static func == (a: AdAttributionKit.AdAttributionKitError, b: AdAttributionKit.AdAttributionKitError) -> Swift.Bool
  public func hash(into hasher: inout Swift.Hasher)
  public var hashValue: Swift.Int {
    get
  }
}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension AdAttributionKit.CoarseConversionValue : Swift.Equatable {}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension AdAttributionKit.CoarseConversionValue : Swift.Hashable {}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension AdAttributionKit.CoarseConversionValue : Swift.RawRepresentable {}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension AdAttributionKit.AdAttributionKitError : Swift.Equatable {}
@available(iOS 17.4, *)
@available(macOS, unavailable)
@available(macCatalyst, unavailable)
@available(tvOS, unavailable)
@available(watchOS, unavailable)
@available(visionOS, unavailable)
extension AdAttributionKit.AdAttributionKitError : Swift.Hashable {}
